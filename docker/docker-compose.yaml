services:
  db:
    image: postgres:15
    env_file:
      - ../.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    expose:
      - 6379

  web: &web
    build:
      context: ..
      dockerfile: docker/Dockerfile.local
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000;
      "
    volumes:
      - ../:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    environment:
      - DJANGO_SETTINGS_MODULE=django_base.settings.local
    env_file:
      - ../.env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celeryworker:
    <<: *web
    container_name: django_base_local_celeryworker
    ports: []
    command: >
      sh -c "
        exec celery -A django_base.celery_app worker -l INFO
      "
    depends_on:
      - web
      - redis
      - db

  celerybeat:
    <<: *web
    ports: []
    command: >
      sh -c "
        exec celery -A django_base.celery_app beat -l INFO
      "
    depends_on:
      - web

  nginx:
    build: ../nginx
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80
    depends_on:
      - web

volumes:
  static_volume:
  media_volume:
